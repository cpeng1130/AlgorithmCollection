
散列函数(Hash函数):
    散列函数是这样的函数，即无论你给它什么数据，它都还你一个数字。
    如果用专业术语来表达的话，我们会说，散列函数“将输入映射到数字”。你可能认为散列函数输出的数字没什么规律，但其实散列函数必须满足一些要求。
         它必须是一致的。例如，假设你输入apple时得到的是4，那么每次输入apple时，得到的都必须为4。如果不是这样，散列表将毫无用处。
         它应将不同的输入映射到不同的数字。
    散列函数准确地指出了价格的存储位置，你根本不用查找！之所以能够这样，具体原因如下。
         散列函数总是将同样的输入映射到相同的索引。每次你输入avocado，得到的都是同一个数字。因此，你可首先使用它来确定将鳄梨的价格存储
           在什么地方，并在以后使用它来确定鳄梨的价格存储在什么地方。
         散列函数将不同的输入映射到不同的索引。 avocado映射到索引4， milk映射到索引0。每种商品都映射到数组的不同位置，让你能够将其价格存储到这里。
         散列函数知道数组有多大，只返回有效的索引。如果数组包含5个元素，散列函数就不会返回无效索引100。
    结合使用散列函数和数组创建了一种被称为散列表（hash table）的数据结构。散列表是你学习的第一种包含额外逻辑的数据结构。数组和链表都被直接映
        射到内存，但散列表更复杂，它使用散列函数来确定元素的存储位置。

    在复杂数据结构中，散列表可能是最有用的，也被称为散列映射、映射、字典和关联数组。散列表的速度很快！你可以立即获取数组中的元素，
        而散列表也使用数组来存储数据，因此其获取元素的速度与数组一样快。
