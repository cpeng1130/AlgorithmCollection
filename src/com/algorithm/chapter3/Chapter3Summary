递归和栈的讲解

第一：递归(recursion)：
       递归的组成：
          基线条件（base case）:函数不再调用自己，跳出循环
          递归条件(recursive case)：函数调用自己
第二：栈（stack）先进后出的数据结构为栈（FILO）
       栈的两种操作：
           压入（插入）
           弹出（删除并读取）
第三：递归调用栈
       使用栈虽然很方便，但是也要付出代价：存储详尽的信息可能占用大量的内存。每个函数调用都要占用一定的内存，如果栈很高，就意味着计算机存储
       了大量函数调用的信息。在这种情况下，你有两种选择。
        重新编写代码，转而使用循环。
        使用尾递归。这是一个高级递归主题，不在本书的讨论范围内。另外，并非所有的语言都支持尾递归

小结
     递归指的是调用自己的函数。
     每个递归函数都有两个条件：基线条件和递归条件。
     栈有两种操作：压入和弹出。
     所有函数调用都进入调用栈。
     调用栈可能很长，这将占用大量的内存。